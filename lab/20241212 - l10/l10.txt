1.
Napisać program, który posiada procedurę do dzielenia. Dzielna przekazywana jest w rejestrze AL, a dzielnik w rejestrze BL. Wynik dzielenia zapisywany będzie do rejestru AL. Jeżeli jako dzielnik zostanie przekazane 0, to program uruchamia przerwanie 0D. Procedura obsługi tego przerwania wyświetli czerwone światło na sygnalizacji drogowej i ustawi flagę „O”(overflow). Rejestr flag nie może być modyfikowany bezpośrednio, dlatego trzeba tego dokonać za pośrednictwem stosu (instrukcja POPF).

Sprawdzić czy nie dzieli przez 0, jeżeli tak zapalić czerwone światło, zapalenie flagi overflow, sprawdzić wartość overflow, tą wartość pushf i popf 
podzielić al. przez bl

MOV AL, 8
MOV BL, 0
CMP BL, 0
JZ Call
CALL 30

DB 37

ORG 30
	DIV AL, BL
	JMP Endl

Call:
	INT 0D


MOV AL, 90
OUT 01
ADD AL, 90
PUSHF

Endl:
	END


2.
Napisać program zawierający procedurę obsługi przerwania o numerze 03, realizującą odczyt cyfry z klawiatury. W rejestrze CL zostanie zapisana wartość cyfry (należy przekształcić znak ASCII). Jeżeli wprowadzony znak z klawiatury nie będzie cyfrą, to w rejestrze CL powinna znaleźć się liczba -1. Wyjątkiem jest litera „Q” (mała lub wielka), dla której rejestr CL przyjmuje wartość -2. Program działa w pętli, wywołując przerwanie i sygnalizując jego wynik za pomocą świateł drogowych, według poniższego schematu:
— wykonuje x mignięć zielonym światłem (x - wprowadzona cyfra),
— dla zwróconej wartości -1 zapala się czerwone światło.
Pętla (a także program) kończy się po napotkaniu liczby -2 w rejestrze CL po wykonaniu przerwania.


JMP Start
DB 04
DB 21

Start:
	MOV DL, A0
	IN 00
	SUB AL, 30
	MOV [DL], AL
	MOV CL, [DL]
	CMP CL, 21
	JZ MinusTwo
	CMP CL, 41
	JZ MinusTwo
	CMP CL, A
	JNS MinusOne
	For:
		MOV AL, 24
		OUT 01
		DEC CL
		MOV AL, 0
		OUT 01
		CMP CL, 0
		JZ Start
		INT 03

MinusOne:
	MOV BL, 0
	SUB BL, 1
	MOV CL, [BL]
	MOV AL, 90
	OUT 01 
	INT 02

MinusTwo:
	MOV CL, 0
	SUB CL, 2
	MOV AL, 90
	OUT 01
	END


3.
Napisać program z procedurą obsługi przerwania 04. Przerwanie to odczytuje znak z klawiatury i umieszcza go w buforze cyklicznym w pamięci.Wielkość takiego bufora należy ustalić na 5 bajtów. Po naciśnięciu przycisku „Enter” zawartość bufora wyświetla się na wyświetlaczu VDU. Program wykonuje przerwanie w pętli nieskończonej. Bufor nigdy nie przepełnia się, bo poprzednio dodane dane zostają nadpisane. Jeżeli wskaźnik zapisu zrówna się ze wskaźnikiem odczytu, to wskaźnik odczytu zostaje przesunięty. W takiej sytuacji nieodczytane znaki zostają utracone. W buforze można zapisać do 5 znaków, ale standardowo zaimplementowany bufor cykliczny pozwoli na odczyt tylko 4 z nich.

JMP Main
JMP Wrap
DB 0E

Main:
	MOV DL, C0
	MOV BL, 70

Wrap:
	MOV CL, 70

Rep:
	IN 00
	MOV [CL], AL
	CMP AL, 0D
	JZ Cout
	INC CL
	CMP CL, 96
	JZ Wrap
	INT 04

Cout:
	MOV CL, 70
	Cout2:
	MOV AL, [CL]
	MOV [DL], AL
	INC CL
	CMP CL, 96
	JZ Main
	INC DL
	JMP Cout2

Endl:
	END


4.
Napisać program zawierający przerwanie 05, którego zadaniem jest wstawienie odczytanego z klawiatury znaku na kolejną wolną pozycję wyświetlacza VDU. Po naciśnięciu przycisku „Enter” dodawanie rozpoczyna się od nowej linii, a naciśnięcie przycisku „Backspace” powoduje usunięcie ostatnio wprowadzonego znaku. 


MOV CL, C0
JMP Start
DB 6

Start:
	IN 00
	CMP AL, 0D
	JZ Enter
	CMP AL, 08
	JZ Backspace
	MOV [CL], AL
	INC CL
	CMP CL, FF
	JZ Endl
	INT 05

Backspace:
	DEC CL
	MOV BL, [CL]
	CMP BL, 21
	JS Backspace
	MOV [CL], DL
	INT 05


Enter:
	CMP CL, D0
	JS Add1
	CMP CL, E0
	JS Add2
	CMP CL, F0
	JS Add3
	INT 05

Add1:
	MOV CL, D0
	INT 05
Add2:
	MOV CL, E0
	INT 05
Add3:
	MOV CL, F0
	INT 05

Endl:
	END
